# Generated by Django 2.2.10 on 2020-03-25 15:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('answer_name', models.CharField(max_length=1000, verbose_name='название ответа')),
                ('is_true', models.BooleanField(default=False, verbose_name='правильный ответ')),
            ],
            options={
                'db_table': 'answer',
                'verbose_name_plural': 'Ответы',
                'verbose_name': 'ответ',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('group_name', models.TextField(verbose_name='название группы')),
                ('group_year', models.IntegerField(verbose_name='год')),
            ],
            options={
                'db_table': 'group',
                'verbose_name_plural': 'Группы',
                'verbose_name': 'Группа',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('question_name', models.TextField(verbose_name='название вопроса')),
            ],
            options={
                'db_table': 'question',
                'verbose_name_plural': 'Вопросы',
                'verbose_name': 'вопрос',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('login', models.CharField(max_length=200, verbose_name='логин/фамилия студента')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='testing.Group', verbose_name='группа')),
            ],
            options={
                'db_table': 'student',
                'verbose_name_plural': 'Студенты',
                'verbose_name': 'Студент',
            },
        ),
        migrations.CreateModel(
            name='StudTest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('test_name', models.CharField(max_length=1000, verbose_name='название теста')),
                ('test_desc', models.TextField(verbose_name='краткое описание')),
                ('available', models.BooleanField(default=False, verbose_name='тест доступен')),
                ('test_available_start', models.DateTimeField(verbose_name='дата и время начала теста')),
                ('test_available_end', models.DateTimeField(verbose_name='дата и время окончания теста')),
                ('max_questions', models.IntegerField(blank=True, null=True, verbose_name='количество вопросов')),
                ('requests', models.ManyToManyField(to='testing.Question', verbose_name='вопросы к тесту')),
            ],
            options={
                'db_table': 'stud_test',
                'verbose_name_plural': 'Тесты',
                'verbose_name': 'тест',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('topic_name', models.CharField(max_length=1000, verbose_name='название теста')),
            ],
            options={
                'db_table': 'topic',
                'verbose_name_plural': 'Темы',
                'verbose_name': 'Тема',
            },
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('stud_grade', models.IntegerField(blank=True, null=True, verbose_name='оценка')),
                ('stud_attempt', models.IntegerField(blank=True, null=True, verbose_name='попыток')),
                ('is_true', models.BooleanField(default=False, verbose_name='тест пройден')),
                ('end_date_time', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='testing.Student')),
                ('test_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='testing.StudTest')),
            ],
            options={
                'db_table': 'test_results',
            },
        ),
        migrations.AddField(
            model_name='studtest',
            name='topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='testing.Topic', verbose_name='выбор темы'),
        ),
        migrations.CreateModel(
            name='QuestionResults',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='testing.Question')),
                ('test_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testing.TestResult')),
            ],
            options={
                'db_table': 'question_results',
            },
        ),
        migrations.CreateModel(
            name='GroupTest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='testing.Group')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='testing.StudTest')),
            ],
            options={
                'db_table': 'group_test',
                'verbose_name_plural': 'Тесты для групп',
                'verbose_name': 'тест для группы',
            },
        ),
        migrations.CreateModel(
            name='AnswerResults',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('answer_result', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='testing.Answer')),
                ('question_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testing.QuestionResults')),
            ],
            options={
                'db_table': 'answer_results',
            },
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='testing.Question', verbose_name='название вопроса'),
        ),
    ]
